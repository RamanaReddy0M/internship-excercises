-- hospital_appointment_data

-- DROP DATABASE IF EXISTS hospital_appointment_db;
-- CREATE DATABASE hospital_appointment_db;

--users
    CREATE TABLE users (
      id BIGINT PRIMARY KEY NOT NULL,
	  user_type VARCHAR(30) NOT NULL,
	  user_type_id BIGINT NOT NULL,
      user_name VARCHAR(50) NOT NULL,
	  password VARCHAR(50) NOT NULL,
	  is_disabled BOOLEAN NOT NULL,
      created_at TIMESTAMP NOT NULL,
      updated_at TIMESTAMP NOT NULL
    );

-- roles
    CREATE TABLE roles (
      id INT PRIMARY KEY NOT NULL,
      role VARCHAR(30) NOT NULL
    );

--patients
    CREATE TABLE patients (
      id BIGINT PRIMARY KEY NOT NULL,
      name VARCHAR(30) NOT NULL,
      gender VARCHAR(10) NOT NULL,
      dob DATE NOT NULL,
      mobile_number VARCHAR(10) NOT NULL,
      address TEXT NOT NULL,
	  parent_id BIGINT
    );

-- receptionists
    CREATE TABLE receptionists (
      id INT PRIMARY KEY NOT NULL,
	  name VARCHAR(100) NOT NULL,
      gender VARCHAR(10) NOT NULL,
      dob DATE NOT NULL,
      mobile_number VARCHAR(10) UNIQUE NOT NULL,
      address TEXT NOT NULL,
      qualification VARCHAR(50) NOT NULL,
	  created_at TIMESTAMP NOT NULL,
      updated_at TIMESTAMP NOT NULL
    );

-- doctors
    CREATE TABLE doctors (
      id INT PRIMARY KEY NOT NULL,
	  name VARCHAR(100) NOT NULL,
      gender VARCHAR(10) NOT NULL,
      dob DATE NOT NULL,
      mobile_number VARCHAR(10) UNIQUE NOT NULL,
      address TEXT NOT NULL,
      qualification VARCHAR(50) NOT NULL,
      experience INT NOT NULL,
	  created_at TIMESTAMP NOT NULL,
      updated_at TIMESTAMP NOT NULL
    );

-- specialisations
    CREATE TABLE specialisations (
      id INT PRIMARY KEY NOT NULL,
      name VARCHAR(200) NOT NULL,
      description TEXT NOT NULL
    );

-- doctors_specialisations
    CREATE TABLE doctors_specialisations(
      id INT PRIMARY KEY NOT NULL,
      specialisation_id INT REFERENCES specialisations(id) NOT NULL,
      doctor_id INT REFERENCES doctors(id) NOT NULL
    );

-- weekday,
    CREATE TABLE weekdays (
      id INT PRIMARY KEY NOT NULL,
      day VARCHAR(10) NOT NULL
    );

-- shifts_schedules
    CREATE TABLE shifts_schedules (
      id INT PRIMARY KEY NOT NULL,
      doctor_id  INT REFERENCES doctors(id) NOT NULL,
      day_id INT REFERENCES weekdays(id) NOT NULL,
      start_time TIME NOT NULL,
      end_time TIME NOT NULL
    );

-- reasons
     CREATE TABLE reasons (
       id INT PRIMARY KEY NOT NULL,
       reason VARCHAR(255) NOT NULL
     );

-- cancelled
     CREATE TABLE cancelled (
       id INT PRIMARY KEY NOT NULL,
       reason VARCHAR(255) NOT NULL
     );

-- appointment_status
        CREATE TABLE appointment_status (
          id INT PRIMARY KEY NOT NULL,
          type VARCHAR(30) NOT NULL
        );

--appointments
    CREATE TABLE appointments (
      id INT PRIMARY KEY NOT NULL,
	  patient_id  INT REFERENCES patients(id) NOT NULL,
	  reason_id INT REFERENCES reasons(id) NOT NULL,
      doctor_id  INT REFERENCES doctors(id) NOT NULL,
      slot_time TIME NOT NULL,
	  book_day DATE NOT NULL,
      status_id INT REFERENCES appointment_status(id) NOT NULL,
      is_cancel boolean NOT NULL,
      cancel_id INT REFERENCES cancelled(id),
      requested_at TIMESTAMP NOT NULL,
      updated_at TIMESTAMP NOT NULL
    );

-- consultations
    CREATE TABLE consultations (
      id INT PRIMARY KEY NOT NULL,
      appointment_id INT REFERENCES appointments(id) NOT NULL,
      in_time TIMESTAMP,
      out_time TIMESTAMP
    );
